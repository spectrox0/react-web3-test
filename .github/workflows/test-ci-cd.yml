name: DevOps-GitHibActions
on: push
jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --prod --frozen-lockfile
      - name: Build Project
        run: pnpm build
      # - name: Upload artifact to enable deployment
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: production-files
      #     path: ./dist
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #     - name: Install Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #     - name: Install pnpm
  #       run: npm install global pnpm
  #     - name: Install Dependencies
  #       run: pnpm install
  #     - name: Run Tests
  #       run: npm run test
  #     - name: Decode and export environment variables
  #       run: |
  #         echo "${{secrets.ENV_VARS}}" | base64 -d > .env
  #         source .env
  #       env:
  #         VITE_ALCHEMY_API_KEY_ETH_MAINNET: ${{ secrets.VITE_ALCHEMY_API_KEY_ETH_MAINNET }}
  #         VITE_ALCHEMY_API_KEY_ETH_SEPOLIA: ${{ secrets.VITE_ALCHEMY_API_KEY_ETH_SEPOLIA }}
  #         VITE_COINGECKO_API_KEY: ${{ secrets.VITE_COINGECKO_API_KEY }}
  # # Deploy Job
  # deploy:
  #   # Add a dependency to the build job
  #   needs: build
  #   # Specify runner + deployment step
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: production-files
  #         path: ./dist
  #     - name: Deploy to GitHub Pages
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.CI_CD_TOKEN }}
  #         publish_dir: ./dist
